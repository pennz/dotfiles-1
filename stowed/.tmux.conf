unbind-key C-b
set -g prefix C-1
# bind-key Space switch-client -l
set -g prefix2 `
bind-key C-o send-prefix

unbind-key \"
bind-key \" send `
bind-key Space last-window

TMUX_COLORTAG_USE_POWERLINE=no

bind-key C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"
bind-key r select-pane -m \; command-prompt -p "Name for this window: " "rename-window '%%'"


## set the default TERM
set -g default-terminal screen-256color

set -g allow-rename on

## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'

## determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# makes sure that if I try to attach and no sessions are alive, one is created.
# new-session -n $HOSTNAME

# 0 is too far from ` ;)
set -g base-index 1
set-window-option -g pane-base-index 1

# Automatically set window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on

set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g mouse on
setw -g monitor-activity on

bind-key v split-window -h
bind-key s split-window -v

bind-key o resize-pane -Z

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
# controlled by set -g @plugin 'christoomey/vim-tmux-navigator'

# Use Alt to resize window
#bind-key -r M-h resize-window -L
#bind-key -r M-j resize-window -D 
#bind-key -r M-k resize-window -U
#bind-key -r M-l resize-window -R

bind-key -r M-j resize-pane -D 5
bind-key -r M-k resize-pane -U 5
bind-key -r M-h resize-pane -L 5
bind-key -r M-l resize-pane -R 5


# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# Alt-[".",","] to switch windows
bind .      next-window
bind ,      previous-window
bind -n M-. next-window
bind -n M-, previous-window
bind -n M-. next-window
bind -n M-, previous-window
bind -n M-L last-window
bind -n M-P switch-client -l

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind R source-file ~/.tmux.conf

#set -g status-utf8 on
set -g status-justify left
set -g status-interval 3


# loud or quiet? quiet
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style bg=colour238,fg=colour196,bold

# }

# The panes {

# highlight selected pane, tab
#set -g window-style 'fg=colour247,bg=colour236'
#set -g window-active-style 'fg=colour250,bg=black'
#set -g pane-border-style fg=colour238,bg=colour235
set -g pane-border-style bg=colour236,fg=colour51
set -g pane-active-border-style bg=colour236,fg=colour51

# }

# The statusbar {
# window status
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
set -g status-left 'P#P #[fg=green][#W] in (#S)#[fg=gray] as #(whoami) '
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
#set -g status-right-length 60
set -g status-position bottom
set -g status-style bg=colour234,fg=colour137,dim
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 60

setw -g window-status-current-style bg=colour238,fg=colour81,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style bg=colour235,fg=colour138,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bg=colour1,fg=colour255,bold

# }

# The messages {
set -g message-style bg=colour166,fg=colour232,bold

# }

# Copy mode
unbind-key ` 
bind ` copy-mode
unbind-key p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel

# toggle mouse on and off
bind-key i set mouse


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'Determinant/tmux-colortag'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
bind | split-window -h
bind - split-window -v
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'
bind-key W command-prompt -p "Switch to pane with pid:" "run-shell 'pane=\$(ps eww %% | sed \"1d; s/^.*TMUX_PANE=//;s/ .*//\"); [[ -z \$pane ]] && tmux display-message \"could not find pid\" || tmux switch-client -t \$pane'"

set-window-option -g aggressive-resize

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
